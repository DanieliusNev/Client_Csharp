@page "/Calendar"
@using System.Linq
@using global::Shared.Calendar

<table class="table table-bordered">
    <thead>
        <tr>
            @for (int i = 0; i < 7; i++)
            {
                var currentDate = WeekStart.AddDays(i);
                <th>@currentDate.ToString("dddd")</th>
            }
        </tr>
    </thead>
    <tbody>
        <tr>
            @for (int i = 0; i < 7; i++)
            {
                var currentDate = WeekStart.AddDays(i);
                <td>
                    <div class="day-box">
                        <!-- Add your to-do boxes or containers here for each day -->
                        @if (EventsByDay.ContainsKey(currentDate))
                        {
                            foreach (var evt in EventsByDay[currentDate])
                            {
                                <div class="event">
                                    <span>@evt.Title</span>
                                    <span>@evt.Description</span>
                                </div>
                            }
                        }
                        <div class="add-box-container">
                            <button @onclick="() => AddToDoBox(currentDate)">Add</button>
                        </div>
                        @if (ToDoBoxes.ContainsKey(currentDate))
                        {
                            foreach (var box in ToDoBoxes[currentDate])
                            {
                                <div class="to-do-box">
                                    <span>@box</span>
                                </div>
                            }
                        }
                    </div>
                </td>
            }
        </tr>
    </tbody>
</table>
<style>
    .to-do-box{
        border: 1px solid #ccc;
        background-color: #b6effb;
        margin-top: 2px;
        margin-bottom: 2px;
    }
</style>
@code {
    [Parameter]
    public List<CalendarEvent> Events { get; set; }

    private Dictionary<DateTime, List<CalendarEvent>> EventsByDay { get; set; }
    private Dictionary<DateTime, List<string>> ToDoBoxes { get; set; }

    [Parameter]
    public DateTime WeekStart { get; set; }

    protected override void OnParametersSet()
    {
        EventsByDay = new Dictionary<DateTime, List<CalendarEvent>>();
        ToDoBoxes = new Dictionary<DateTime, List<string>>();
        
        if (Events != null)
        {
            foreach (var evt in Events)
            {
                var startDate = evt.StartDate.Date;

                if (!EventsByDay.ContainsKey(startDate))
                {
                    EventsByDay[startDate] = new List<CalendarEvent>();
                }

                EventsByDay[startDate].Add(evt);
            }
        }
    }

    private void AddToDoBox(DateTime date)
    {
        if (!ToDoBoxes.ContainsKey(date))
        {
            ToDoBoxes[date] = new List<string>();
        }

        ToDoBoxes[date].Add($"To-Do {ToDoBoxes[date].Count + 1}");
    }
}
