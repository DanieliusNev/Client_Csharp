@page "/Registration"

@using global::Shared.Models
@using Client_Blazor_App.Service
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3 class="text-center">Registration</h3>
            <div class="form-field">
                <label class="form-label">User name:</label>
                <input type="text" class="form-control" @bind="userName"/>
            </div>
            <div class="form-field">
                <label class="form-label">Password:</label>
                <input type="password" class="form-control" @bind="passSec"/>
            </div>
            
            <div class="form-field">
                <label class="form-label">Password Again:</label>
                <input type="password" class="form-control" @bind="password"/>                                       
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
                        {
                            <div class="field">
                                <label style="color: red">
                                    @errorLabel
                                </label>
                            </div>
                        }
                        else
                        {
                            <div class="field">
                                <label style="color: #03c203">
                                    @successLabel
                                </label>
                            </div>
                        }
                        <div class="form-field">
                            <button class="btn btn-primary btn-block" @onclick="RegisterAsync">Register</button>
                        </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string passSec;
    private string errorLabel;
    private string successLabel;

    private async Task RegisterAsync()
    {
        errorLabel = "";
        try
        {
            if (passSec.Equals(password))
            {
                await authService.RegisterUserAsync(userName, password);
                successLabel = $" Registration was successful {userName}!";
                navMgr.NavigateTo("/Login");
            }
            else
            {
                throw new Exception("Passwords are not the same!");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
        
    }
}